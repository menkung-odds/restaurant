<div id="order-form-<%= food_item.id %>" class="bg-white rounded-lg p-6 w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5">
  <h2 class="text-2xl font-semibold mb-4">สั่งอาหาร</h2>

  <%= form_with(model: @order, class: "contents") do |form| %>
    
    <% if @order.errors.any? %>
      <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">
        <h2><%= pluralize(@order.errors.count, "error") %> prohibited this order from being saved:</h2>
        <ul>
          <% @order.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <!-- Food Name (Read-Only) -->
    <div class="mb-4">
      <%= form.label :food_name, "ชื่ออาหาร", class: "block text-sm font-medium" %>
      <%= form.text_field :food_name, value: food_item.name, class: "w-full border border-gray-300 rounded px-3 py-2", readonly: true %>
    </div>

    <!-- Quantity -->
    <div class="mb-4 flex items-center">
      <%= form.label :quantity, "จำนวนจาน", class: "block text-sm font-medium mr-4" %>
      <%= form.number_field :quantity, value: 1, min: 1, class: "mx-2 w-16 text-center border border-gray-300 rounded" %>
    </div>
    <div class="mb-4">
      <%= form.label :note, "หมายเหตุสำหรับเชฟ", class: "block text-sm font-medium" %>
      <%= form.text_area :note, rows: 3, class: "w-full border border-gray-300 rounded px-3 py-2" %>
    </div>

    <%= form.hidden_field :food_item_id, value: food_item.id %>

    <%= form.hidden_field :total_price, value: food_item.price * (@order.quantity || 1), class: "block shadow rounded-md border border-gray-400 outline-none px-3 py-2 mt-2 w-full" %>

   <div class="flex justify-end">
        <button id="cancelAction-<%= food_item.id %>" class="mr-4 bg-gray-300 px-4 py-2 rounded">ยกเลิก</button>
        <%= button_to orders_path, method: :post, class: "bg-blue-500 text-white px-4 py-2 rounded" do %>
            สั่งอาหาร
        <% end %>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  // Loop through all food items and bind events for each
  <% @food_items.each do |food_item| %>
    const quantityInput = document.getElementById("quantity-<%= food_item.id %>");
    const priceInput = document.getElementById("totalPrice-<%= food_item.id %>");
    const totalPriceInput = document.getElementById("totalPrice-<%= food_item.id %>");
    const hiddenTotalPriceField = document.querySelector("input[name='order[total_price]'][data-food-id='<%= food_item.id %>']");  // Hidden field for total price (make sure to target each one uniquely)

    const pricePerUnit = parseFloat(<%= food_item.price %>);  // Food item price from Ruby

    function updateTotalPrice() {
      const quantity = parseInt(quantityInput.value) || 1; // Default to 1 if quantity is not specified
      const totalPrice = pricePerUnit * quantity;
      totalPriceInput.value = totalPrice.toFixed(2);  // Update the total price in the visible input

      // Update the hidden field dynamically
      hiddenTotalPriceField.value = totalPrice.toFixed(2);
    }

    // Listen for quantity changes and update price
    quantityInput.addEventListener("input", updateTotalPrice);

    // Initial total price update
    updateTotalPrice();

    // Cancel action (to hide the modal or form)
    const cancelAction = document.getElementById('cancelAction-<%= food_item.id %>');
    if (cancelAction) {
      cancelAction.addEventListener('click', function() {
        const modal = cancelAction.closest('.fixed');
        modal.classList.add('hidden');
      });
    }

    // Confirm action (for order confirmation)
    const confirmAction = document.getElementById('confirmAction-<%= food_item.id %>');
    if (confirmAction) {
      confirmAction.addEventListener('click', function() {
        const quantity = document.getElementById('quantity-<%= food_item.id %>').value;
        const note = document.getElementById('note-<%= food_item.id %>').value;
        const foodName = document.getElementById('foodName-<%= food_item.id %>').value;
        console.log('Ordered:', foodName, 'Quantity:', quantity, 'Note:', note);

        const modal = confirmAction.closest('.fixed');
        modal.classList.add('hidden');
      });
    }
  <% end %>
});

</script>
